<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="35" passed="34">
  <reporter-output>
  </reporter-output>
  <suite name="Suite1" duration-ms="203560" started-at="2019-08-15T19:18:09Z" finished-at="2019-08-15T19:21:33Z">
    <groups>
    </groups>
    <test name="RefgetSuite" duration-ms="203560" started-at="2019-08-15T19:18:09Z" finished-at="2019-08-15T19:21:33Z">
      <class name="org.ga4gh.RefgetTestSuite.MetadataEndpointTest">
        <test-method status="PASS" signature="setRefgetServer(org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="setRefgetServer" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:21Z" finished-at="2019-08-15T19:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setRefgetServer -->
        <test-method status="PASS" signature="getCircularSequenceMetadata()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="getCircularSequenceMetadata" duration-ms="955" started-at="2019-08-15T19:21:21Z" finished-at="2019-08-15T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCircularSequenceMetadata -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:21Z" finished-at="2019-08-15T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:22Z" finished-at="2019-08-15T19:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getCircularSequenceMetadata status=SUCCESS method=MetadataEndpointTest.getCircularSequenceMetadata()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:22Z" finished-at="2019-08-15T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getInvalidSequenceMetadata()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="getInvalidSequenceMetadata" duration-ms="638" started-at="2019-08-15T19:21:22Z" finished-at="2019-08-15T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInvalidSequenceMetadata -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:22Z" finished-at="2019-08-15T19:21:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getInvalidSequenceMetadata status=SUCCESS method=MetadataEndpointTest.getInvalidSequenceMetadata()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="getMetadataAliases()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="getMetadataAliases" duration-ms="657" started-at="2019-08-15T19:21:22Z" finished-at="2019-08-15T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMetadataAliases -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:22Z" finished-at="2019-08-15T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="clear" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:23Z" finished-at="2019-08-15T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:23Z" finished-at="2019-08-15T19:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMetadataAliases status=SUCCESS method=MetadataEndpointTest.getMetadataAliases()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="getMetadataLength()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="getMetadataLength" duration-ms="633" started-at="2019-08-15T19:21:23Z" finished-at="2019-08-15T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMetadataLength -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:23Z" finished-at="2019-08-15T19:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMetadataLength status=SUCCESS method=MetadataEndpointTest.getMetadataLength()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:23Z" finished-at="2019-08-15T19:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getMetadataMd5()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="getMetadataMd5" duration-ms="630" started-at="2019-08-15T19:21:23Z" finished-at="2019-08-15T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMetadataMd5 -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:24Z" finished-at="2019-08-15T19:21:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMetadataMd5 status=SUCCESS method=MetadataEndpointTest.getMetadataMd5()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:24Z" finished-at="2019-08-15T19:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getMetadataResponseCheck()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="getMetadataResponseCheck" duration-ms="628" started-at="2019-08-15T19:21:24Z" finished-at="2019-08-15T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMetadataResponseCheck -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:25Z" finished-at="2019-08-15T19:21:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMetadataResponseCheck status=SUCCESS method=MetadataEndpointTest.getMetadataResponseCheck()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="clear" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:25Z" finished-at="2019-08-15T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getMetadataTrunc512()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="getMetadataTrunc512" duration-ms="643" started-at="2019-08-15T19:21:25Z" finished-at="2019-08-15T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMetadataTrunc512 -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:25Z" finished-at="2019-08-15T19:21:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMetadataTrunc512 status=SUCCESS method=MetadataEndpointTest.getMetadataTrunc512()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="clear" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:25Z" finished-at="2019-08-15T19:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getMetadataWithInvalidHeader()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="getMetadataWithInvalidHeader" duration-ms="653" started-at="2019-08-15T19:21:25Z" finished-at="2019-08-15T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMetadataWithInvalidHeader -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:26Z" finished-at="2019-08-15T19:21:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMetadataWithInvalidHeader status=SUCCESS method=MetadataEndpointTest.getMetadataWithInvalidHeader()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:26Z" finished-at="2019-08-15T19:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getSequenceMetadata()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="getSequenceMetadata" duration-ms="625" started-at="2019-08-15T19:21:26Z" finished-at="2019-08-15T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceMetadata -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:27Z" finished-at="2019-08-15T19:21:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceMetadata status=SUCCESS method=MetadataEndpointTest.getSequenceMetadata()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:27Z" finished-at="2019-08-15T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getSequenceMetadataSha512()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="getSequenceMetadataSha512" duration-ms="638" started-at="2019-08-15T19:21:27Z" finished-at="2019-08-15T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceMetadataSha512 -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:27Z" finished-at="2019-08-15T19:21:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceMetadataSha512 status=SUCCESS method=MetadataEndpointTest.getSequenceMetadataSha512()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:27Z" finished-at="2019-08-15T19:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getSequenceMetadataWithoutAcceptHeader()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="getSequenceMetadataWithoutAcceptHeader" duration-ms="642" started-at="2019-08-15T19:21:27Z" finished-at="2019-08-15T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceMetadataWithoutAcceptHeader -->
        <test-method status="PASS" signature="setOverview(org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="setOverview" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:28Z" finished-at="2019-08-15T19:21:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setOverview -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:28Z" finished-at="2019-08-15T19:21:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceMetadataWithoutAcceptHeader status=SUCCESS method=MetadataEndpointTest.getSequenceMetadataWithoutAcceptHeader()[pri:0, instance:org.ga4gh.RefgetTestSuite.MetadataEndpointTest@edf4efb] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
      </class> <!-- org.ga4gh.RefgetTestSuite.MetadataEndpointTest -->
      <class name="org.ga4gh.RefgetTestSuite.SequenceEndpointTest">
        <test-method status="PASS" signature="setRefgetServer(org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setRefgetServer" is-config="true" duration-ms="5" started-at="2019-08-15T19:18:15Z" finished-at="2019-08-15T19:18:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setRefgetServer -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="1" started-at="2019-08-15T19:18:15Z" finished-at="2019-08-15T19:18:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getCircularSequence()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getCircularSequence" duration-ms="1289" started-at="2019-08-15T19:18:15Z" finished-at="2019-08-15T19:18:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCircularSequence -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:18:16Z" finished-at="2019-08-15T19:18:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getCircularSequence status=SUCCESS method=SequenceEndpointTest.getCircularSequence()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="1" started-at="2019-08-15T19:18:16Z" finished-at="2019-08-15T19:18:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getCircularSequenceSuccessCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getCircularSequenceSuccessCases" duration-ms="2219" started-at="2019-08-15T19:18:16Z" finished-at="2019-08-15T19:18:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCircularSequenceSuccessCases -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:18:18Z" finished-at="2019-08-15T19:18:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getCircularSequenceSuccessCases status=SUCCESS method=SequenceEndpointTest.getCircularSequenceSuccessCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:18Z" finished-at="2019-08-15T19:18:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getCircularSequenceWithCircularSupportErrorCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getCircularSequenceWithCircularSupportErrorCases" duration-ms="1274" started-at="2019-08-15T19:18:18Z" finished-at="2019-08-15T19:18:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCircularSequenceWithCircularSupportErrorCases -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:19Z" finished-at="2019-08-15T19:18:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getCircularSequenceWithCircularSupportErrorCases status=SUCCESS method=SequenceEndpointTest.getCircularSequenceWithCircularSupportErrorCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:19Z" finished-at="2019-08-15T19:18:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="SKIP" signature="getCircularSequenceWithoutCircularSupportErrorCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getCircularSequenceWithoutCircularSupportErrorCases" duration-ms="1" started-at="2019-08-15T19:18:19Z" finished-at="2019-08-15T19:18:19Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Test skipped as server supports circular sequences]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Test skipped as server supports circular sequences
at org.ga4gh.RefgetTestSuite.SequenceEndpointTest.getCircularSequenceWithoutCircularSupportErrorCases(SequenceEndpointTest.java:398)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73)
at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCircularSequenceWithoutCircularSupportErrorCases -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:18:19Z" finished-at="2019-08-15T19:18:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getCircularSequenceWithoutCircularSupportErrorCases status=SKIP method=SequenceEndpointTest.getCircularSequenceWithoutCircularSupportErrorCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="1" started-at="2019-08-15T19:18:19Z" finished-at="2019-08-15T19:18:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getInvalidSequence()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getInvalidSequence" duration-ms="651" started-at="2019-08-15T19:18:19Z" finished-at="2019-08-15T19:18:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInvalidSequence -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:18:20Z" finished-at="2019-08-15T19:18:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getInvalidSequence status=SUCCESS method=SequenceEndpointTest.getInvalidSequence()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="1" started-at="2019-08-15T19:18:20Z" finished-at="2019-08-15T19:18:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getSequence()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getSequence" duration-ms="2637" started-at="2019-08-15T19:18:20Z" finished-at="2019-08-15T19:18:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequence -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="1" started-at="2019-08-15T19:18:23Z" finished-at="2019-08-15T19:18:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:23Z" finished-at="2019-08-15T19:18:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequence status=SUCCESS method=SequenceEndpointTest.getSequence()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="getSequenceSha512()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getSequenceSha512" duration-ms="2474" started-at="2019-08-15T19:18:23Z" finished-at="2019-08-15T19:18:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceSha512 -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:18:25Z" finished-at="2019-08-15T19:18:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceSha512 status=SUCCESS method=SequenceEndpointTest.getSequenceSha512()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:25Z" finished-at="2019-08-15T19:18:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getSequenceWithHeaders()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getSequenceWithHeaders" duration-ms="2882" started-at="2019-08-15T19:18:25Z" finished-at="2019-08-15T19:18:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceWithHeaders -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:18:28Z" finished-at="2019-08-15T19:18:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceWithHeaders status=SUCCESS method=SequenceEndpointTest.getSequenceWithHeaders()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="getSequenceWithInvalidHeaders()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getSequenceWithInvalidHeaders" duration-ms="625" started-at="2019-08-15T19:18:28Z" finished-at="2019-08-15T19:18:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceWithInvalidHeaders -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:28Z" finished-at="2019-08-15T19:18:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:29Z" finished-at="2019-08-15T19:18:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceWithInvalidHeaders status=SUCCESS method=SequenceEndpointTest.getSequenceWithInvalidHeaders()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="1" started-at="2019-08-15T19:18:29Z" finished-at="2019-08-15T19:18:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getSequenceWithInvalidRangeHeadersErrorCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getSequenceWithInvalidRangeHeadersErrorCases" duration-ms="4477" started-at="2019-08-15T19:18:29Z" finished-at="2019-08-15T19:18:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceWithInvalidRangeHeadersErrorCases -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:33Z" finished-at="2019-08-15T19:18:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceWithInvalidRangeHeadersErrorCases status=SUCCESS method=SequenceEndpointTest.getSequenceWithInvalidRangeHeadersErrorCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:33Z" finished-at="2019-08-15T19:18:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getSequenceWithInvalidStartAndEndParameterErrorCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getSequenceWithInvalidStartAndEndParameterErrorCases" duration-ms="1914" started-at="2019-08-15T19:18:33Z" finished-at="2019-08-15T19:18:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceWithInvalidStartAndEndParameterErrorCases -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:35Z" finished-at="2019-08-15T19:18:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceWithInvalidStartAndEndParameterErrorCases status=SUCCESS method=SequenceEndpointTest.getSequenceWithInvalidStartAndEndParameterErrorCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="1" started-at="2019-08-15T19:18:35Z" finished-at="2019-08-15T19:18:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getSequenceWithOutOfBoundRangeHeadersErrorCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getSequenceWithOutOfBoundRangeHeadersErrorCases" duration-ms="4166" started-at="2019-08-15T19:18:35Z" finished-at="2019-08-15T19:18:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceWithOutOfBoundRangeHeadersErrorCases -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:39Z" finished-at="2019-08-15T19:18:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceWithOutOfBoundRangeHeadersErrorCases status=SUCCESS method=SequenceEndpointTest.getSequenceWithOutOfBoundRangeHeadersErrorCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="4" started-at="2019-08-15T19:18:39Z" finished-at="2019-08-15T19:18:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getSequenceWithOutOfBoundStartAndEndParameterErrorCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getSequenceWithOutOfBoundStartAndEndParameterErrorCases" duration-ms="2863" started-at="2019-08-15T19:18:39Z" finished-at="2019-08-15T19:18:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceWithOutOfBoundStartAndEndParameterErrorCases -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:42Z" finished-at="2019-08-15T19:18:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceWithOutOfBoundStartAndEndParameterErrorCases status=SUCCESS method=SequenceEndpointTest.getSequenceWithOutOfBoundStartAndEndParameterErrorCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="getSequenceWithRangeHeaders()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getSequenceWithRangeHeaders" duration-ms="554" started-at="2019-08-15T19:18:42Z" finished-at="2019-08-15T19:18:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceWithRangeHeaders -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:42Z" finished-at="2019-08-15T19:18:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:43Z" finished-at="2019-08-15T19:18:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:18:43Z" finished-at="2019-08-15T19:18:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceWithRangeHeaders status=SUCCESS method=SequenceEndpointTest.getSequenceWithRangeHeaders()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="getSequenceWithRangeHeadersSuccessCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getSequenceWithRangeHeadersSuccessCases" duration-ms="68238" started-at="2019-08-15T19:18:43Z" finished-at="2019-08-15T19:19:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceWithRangeHeadersSuccessCases -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:19:51Z" finished-at="2019-08-15T19:19:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceWithRangeHeadersSuccessCases status=SUCCESS method=SequenceEndpointTest.getSequenceWithRangeHeadersSuccessCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="1" started-at="2019-08-15T19:19:51Z" finished-at="2019-08-15T19:19:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getSequenceWithStartAndEndParameter()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getSequenceWithStartAndEndParameter" duration-ms="10243" started-at="2019-08-15T19:19:51Z" finished-at="2019-08-15T19:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceWithStartAndEndParameter -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:20:01Z" finished-at="2019-08-15T19:20:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceWithStartAndEndParameter status=SUCCESS method=SequenceEndpointTest.getSequenceWithStartAndEndParameter()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="1" started-at="2019-08-15T19:20:01Z" finished-at="2019-08-15T19:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getSequenceWithStartAndEndParameterSuccessCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getSequenceWithStartAndEndParameterSuccessCases" duration-ms="66239" started-at="2019-08-15T19:20:01Z" finished-at="2019-08-15T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceWithStartAndEndParameterSuccessCases -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:07Z" finished-at="2019-08-15T19:21:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceWithStartAndEndParameterSuccessCases status=SUCCESS method=SequenceEndpointTest.getSequenceWithStartAndEndParameterSuccessCases()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:07Z" finished-at="2019-08-15T19:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getSequenceWithStartParameter()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="getSequenceWithStartParameter" duration-ms="13112" started-at="2019-08-15T19:21:07Z" finished-at="2019-08-15T19:21:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSequenceWithStartParameter -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:21Z" finished-at="2019-08-15T19:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSequenceWithStartParameter status=SUCCESS method=SequenceEndpointTest.getSequenceWithStartParameter()[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="setOverview(org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.SequenceEndpointTest@7f690630]" name="setOverview" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:21Z" finished-at="2019-08-15T19:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setOverview -->
      </class> <!-- org.ga4gh.RefgetTestSuite.SequenceEndpointTest -->
      <class name="org.ga4gh.RefgetTestSuite.InfoEndpointTest">
        <test-method status="PASS" signature="setRefgetServer(org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="setRefgetServer" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:28Z" finished-at="2019-08-15T19:21:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setRefgetServer -->
        <test-method status="PASS" signature="getServiceInfoAlgorithms()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="getServiceInfoAlgorithms" duration-ms="1391" started-at="2019-08-15T19:21:28Z" finished-at="2019-08-15T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getServiceInfoAlgorithms -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:28Z" finished-at="2019-08-15T19:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:29Z" finished-at="2019-08-15T19:21:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getServiceInfoAlgorithms status=SUCCESS method=InfoEndpointTest.getServiceInfoAlgorithms()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="clear" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:29Z" finished-at="2019-08-15T19:21:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getServiceInfoCircular()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="getServiceInfoCircular" duration-ms="857" started-at="2019-08-15T19:21:29Z" finished-at="2019-08-15T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getServiceInfoCircular -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:30Z" finished-at="2019-08-15T19:21:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getServiceInfoCircular status=SUCCESS method=InfoEndpointTest.getServiceInfoCircular()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:30Z" finished-at="2019-08-15T19:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getServiceInfoSubsequenceLimit()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="getServiceInfoSubsequenceLimit" duration-ms="650" started-at="2019-08-15T19:21:30Z" finished-at="2019-08-15T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getServiceInfoSubsequenceLimit -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="clear" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:31Z" finished-at="2019-08-15T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:31Z" finished-at="2019-08-15T19:21:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getServiceInfoSubsequenceLimit status=SUCCESS method=InfoEndpointTest.getServiceInfoSubsequenceLimit()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="getServiceInfoSupportedApi()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="getServiceInfoSupportedApi" duration-ms="626" started-at="2019-08-15T19:21:31Z" finished-at="2019-08-15T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getServiceInfoSupportedApi -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="setResults" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:31Z" finished-at="2019-08-15T19:21:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getServiceInfoSupportedApi status=SUCCESS method=InfoEndpointTest.getServiceInfoSupportedApi()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="getServiceInfoWithInvalidHeader()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="getServiceInfoWithInvalidHeader" duration-ms="622" started-at="2019-08-15T19:21:31Z" finished-at="2019-08-15T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getServiceInfoWithInvalidHeader -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:31Z" finished-at="2019-08-15T19:21:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="setResults" is-config="true" duration-ms="3" started-at="2019-08-15T19:21:32Z" finished-at="2019-08-15T19:21:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getServiceInfoWithInvalidHeader status=SUCCESS method=InfoEndpointTest.getServiceInfoWithInvalidHeader()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="clear()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="clear" is-config="true" duration-ms="0" started-at="2019-08-15T19:21:32Z" finished-at="2019-08-15T19:21:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clear -->
        <test-method status="PASS" signature="getServiceInfoWithoutAcceptHeader()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="getServiceInfoWithoutAcceptHeader" duration-ms="626" started-at="2019-08-15T19:21:32Z" finished-at="2019-08-15T19:21:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getServiceInfoWithoutAcceptHeader -->
        <test-method status="PASS" signature="setResults(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="setResults" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:33Z" finished-at="2019-08-15T19:21:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getServiceInfoWithoutAcceptHeader status=SUCCESS method=InfoEndpointTest.getServiceInfoWithoutAcceptHeader()[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResults -->
        <test-method status="PASS" signature="setOverview(org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.InfoEndpointTest@2f7a2457]" name="setOverview" is-config="true" duration-ms="1" started-at="2019-08-15T19:21:33Z" finished-at="2019-08-15T19:21:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setOverview -->
      </class> <!-- org.ga4gh.RefgetTestSuite.InfoEndpointTest -->
      <class name="org.ga4gh.RefgetTestSuite.RefgetBaseTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.ga4gh.RefgetTestSuite.RefgetBaseTest@35f983a6]" name="setup" is-config="true" duration-ms="5297" started-at="2019-08-15T19:18:09Z" finished-at="2019-08-15T19:18:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="dumpJSON(org.testng.ITestContext)[pri:0, instance:org.ga4gh.RefgetTestSuite.RefgetBaseTest@35f983a6]" name="dumpJSON" is-config="true" duration-ms="162" started-at="2019-08-15T19:21:33Z" finished-at="2019-08-15T19:21:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6c4f9535]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dumpJSON -->
      </class> <!-- org.ga4gh.RefgetTestSuite.RefgetBaseTest -->
    </test> <!-- RefgetSuite -->
  </suite> <!-- Suite1 -->
</testng-results>
